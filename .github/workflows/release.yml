name: Release

permissions:
  contents: read

run-name: Release ${{ github.ref_name }}

on:
  release:
    types: [ created ]

jobs:
  validate-version:
    name: Validate Version

    env:
      FORCE_COLOR: 1
      PYTHONUNBUFFERED: 1

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Validate version
        run: make validate-release VERSION=${GITHUB_REF#refs/tags/}

  build:
    name: Build
    uses: alexdlaird/pyngrok/.github/workflows/build.yml@main
    secrets: inherit

  release:
    name: Release
    needs: [build, validate-version]

    env:
      FORCE_COLOR: 1
      PYTHONUNBUFFERED: 1
      PYNGROK_DOCKER_GITHUB_TOKEN: ${{ secrets.PYNGROK_DOCKER_GITHUB_TOKEN }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: make upload
      - name: Trigger pyngrok-docker Release
        if: ${{ env.PYNGROK_DOCKER_GITHUB_TOKEN != '' }}
        run: |
          gh release create \
          -R alexdlaird/pyngrok-docker ${GITHUB_REF#refs/tags/}.0 \
          --notes "Pre-built containers for [pyngrok==${GITHUB_REF#refs/tags/}](https://pypi.org/project/pyngrok/${GITHUB_REF#refs/tags/})."
        env:
          GH_TOKEN: ${{ env.PYNGROK_DOCKER_GITHUB_TOKEN }}
